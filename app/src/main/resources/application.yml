logging:
  file:
    path: /opt/log

management:
  endpoints:
    web:
      exposure:
        include: "actuator, beans, health, flyway, configprops"

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/education_app?autoReconnect=true&useSSL=false
    username: education-app
    password: education-app
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQL95Dialect
    properties.hibernate:
      dialect: com.global.education.service.specification.dialect.EducationPostgreSQL95Dialect
      temp.use_jdbc_metadata_defaults: false
      #show_sql: true
      #use_sql_comments: true
      #format_sql: true
      #type: trace
  flyway:
    enabled: true
    baseline-on-migrate: true
    url: ${spring.datasource.url}
    user: education-app
    password: education-app
  kafka:
    admin:
      fail-fast: true
    bootstrap-servers: localhost:9092

  # To enable mail functionality, you need to do the next steps:
  # - enabled -> true
  # - uncomment and put your username (account of google) and password from the trust application
  # - auth -> true
  mail:
    enabled: false
    #username: your@gmail.com
    #password: password
    host: smtp.gmail.com
    port: 587
    properties.mail.smtp:
      auth: false
      connectiontimeout: 5000
      timeout: 5000
      writetimeout: 5000
      starttls.enable: true

kafka-topics:
  user-finish-lesson-event:
    enabled: true
    topic: education-finish-lesson-event
    producer-properties:
      "[bootstrap.servers]": ${spring.kafka.bootstrap-servers}
      "[key.serializer]": org.apache.kafka.common.serialization.StringSerializer
      "[value.serializer]": org.apache.kafka.common.serialization.StringSerializer
  user-start-course-event:
    enabled: true
    topic: education-start-course-event
    producer-properties:
      "[bootstrap.servers]": ${spring.kafka.bootstrap-servers}
      "[key.serializer]": org.apache.kafka.common.serialization.StringSerializer
      "[value.serializer]": org.apache.kafka.common.serialization.StringSerializer
  user-start-course-event-consumer:
    enabled: true
    topic: education-start-course-event
    consumer-properties:
      "[bootstrap.servers]": ${spring.kafka.bootstrap-servers}
      "[key.deserializer]": org.apache.kafka.common.serialization.StringDeserializer
      "[value.deserializer]": org.apache.kafka.common.serialization.StringDeserializer
      "[group.id]": "user-start-course-event-group"
  user-finish-lesson-event-consumer:
    enabled: true
    topic: education-finish-lesson-event
    consumer-properties:
      "[bootstrap.servers]": ${spring.kafka.bootstrap-servers}
      "[key.deserializer]": org.apache.kafka.common.serialization.StringDeserializer
      "[value.deserializer]": org.apache.kafka.common.serialization.StringDeserializer
      "[group.id]": "user-finish-lesson-event-group"

server:
  servlet:
    context-path: /app

security:
  oauth2:
    client:
      clientId: education-web-client
      clientSecret: education-web-client-secret
      accessTokenUri: http://localhost:8081/auth/oauth/token
      userAuthorizationUri: http://localhost:8081/auth/oauth/authorize
    resource:
      id: ${spring.application.name}
      jwt:
        keyValue:
          ZWR1Y2F0aW9uLXdlYi1jbGllbnQ6ZWR1Y2F0aW9uLXdlYi1jbGllbnQtc2VjcmV0