pipeline {
    agent any

    parameters {
        gitParameter defaultValue: 'origin/master', name: 'BRANCH', type: 'PT_BRANCH'
        booleanParam(name: 'VERIFY', defaultValue: false, description: ' Run Integration Tests')
    }

    stages {

        stage('JUNIT Tests') {
            steps {
                script {
                    sh 'mvn clean test'
                }
            }
        }

        stage('Build Jar') {
            steps {
                script {
                    sh 'mvn -DskipTests package'
                }
            }
        }

        stage('Verify') {
            when {
                expression { params.VERIFY == true }
            }
            steps {
                script {
                    sh 'mvn verify -PIT'
                }
            }
        }

        stage('Prune Untagged Docker Images') {
            steps {
                sh 'docker image prune -f'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh 'mvn -DskipTests package -Pdocker -Dtag.build.number=$BUILD_NUMBER'
                }
            }
        }

        stage('Build TAG Number') {
            steps {
                script {
                    sh '''echo ${BUILD_NUMBER}. > version.log \
                        && truncate -s -1 version.log \
                        && mvn help:evaluate -Dexpression=project.version -q -DforceStdout >> version.log'''
                }
            }
        }

        stage('Push to DockerHub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub_user', passwordVariable: 'D_PASS', usernameVariable: 'D_USER')]) {
                    sh 'chmod +x "$WORKSPACE/jenkins/build_pipeline/push-image.sh"'
                    sh '"$WORKSPACE/jenkins/build_pipeline/push-image.sh" $D_USER $D_PASS'
                }
            }
        }

    } // end of stages block

    post {
        always {
            println '****** Started CLEAN POST ACTION stage ******'
            cleanWs()
            println '****** Finished CLEAN POST ACTION stage ******'
        }
    }

}
